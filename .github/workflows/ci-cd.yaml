name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    paths:
      - "**" # Trigger when any file is modified

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ fuel-ingestor ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Cache Docker layers
        uses: actions/cache@v4.2.3
        with:
          path: /tmp/.buildx-cache-${{ matrix.service }}
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ hashFiles(format('{0}/Dockerfile.test', matrix.service)) }}
          restore-keys: ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Build Test Container
        working-directory: ${{ matrix.service }}
        run: |
          docker buildx build --load \
            --cache-from=type=local,src=/tmp/.buildx-cache-${{ matrix.service }} \
            --cache-to=type=local,dest=/tmp/.buildx-cache-${{ matrix.service }} \
            -f Dockerfile.test -t test-image .

      - name: Run Tests
        working-directory: ${{ matrix.service }}
        run: docker run --rm test-image

  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [ fuel-ingestor ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Cache Docker layers
        uses: actions/cache@v4.2.3
        with:
          path: /tmp/.buildx-cache-${{ matrix.service }}
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ hashFiles(format('{0}/Dockerfile', matrix.service)) }}
          restore-keys: ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Log in to Docker Registry
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        working-directory: ${{ matrix.service }}
        run: |
          docker buildx build --load \
            --cache-from=type=local,src=/tmp/.buildx-cache-${{ matrix.service }} \
            --cache-to=type=local,dest=/tmp/.buildx-cache-${{ matrix.service }} \
            -t ${{ secrets.DOCKER_USERNAME }}/infass-${{ matrix.service }}:${GITHUB_SHA::7} .

      - name: Push Docker Image
        working-directory: ${{ matrix.service }}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/infass-${{ matrix.service }}:${GITHUB_SHA::7}
          docker tag ${{ secrets.DOCKER_USERNAME }}/infass-${{ matrix.service }}:${GITHUB_SHA::7} \
            ${{ secrets.DOCKER_USERNAME }}/infass-${{ matrix.service }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/infass-${{ matrix.service }}:latest

  terraform-deploy:
    name: Deploy infra using terraform
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      TF_VAR_APP_NAME: infass
      TF_VAR_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_REGION: europe-southwest1
      TF_VAR_DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      TF_VAR_GCP_USER: ${{ secrets.GCP_USER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.1.3
        with:
          credentials_json: ${{ secrets.GCP_CICD_CREDENTIALS }}

      - name: Set up Terraform
        id: setup-tf
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: 1.10.4

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false

      - name: Initialize Terraform
        id: init
        working-directory: ./infra
        run: terraform init

      - name: Plan Terraform changes
        id: plan
        working-directory: ./infra
        run: terraform plan -var "DOCKER_IMAGE_TAG=${GITHUB_SHA::7}"

      - name: Apply Terraform changes
        id: apply
        working-directory: ./infra
        run: terraform apply -auto-approve -var "DOCKER_IMAGE_TAG=${GITHUB_SHA::7}"
